import pygame
import random

# Initialize pygame
pygame.init()

# Screen and grid
WIDTH, HEIGHT = 600, 400
CELL_SIZE = 20

# Colors
BLACK = (0, 0, 0)
GREEN = (0, 200, 0)
RED = (200, 0, 0)
WHITE = (255, 255, 255)

# Set up display
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Snake Game")

# Clock
clock = pygame.time.Clock()
BASE_SPEED = 10  # initial speed

# Snake initialization
snake = [(100, 100), (80, 100), (60, 100)]
direction = "RIGHT"
score = 0

# Function to generate food aligned to grid
def generate_food():
    x = random.randint(0, (WIDTH - CELL_SIZE) // CELL_SIZE) * CELL_SIZE
    y = random.randint(0, (HEIGHT - CELL_SIZE) // CELL_SIZE) * CELL_SIZE
    while (x, y) in snake:
        x = random.randint(0, (WIDTH - CELL_SIZE) // CELL_SIZE) * CELL_SIZE
        y = random.randint(0, (HEIGHT - CELL_SIZE) // CELL_SIZE) * CELL_SIZE
    return (x, y)

food = generate_food()

# Draw snake
def draw_snake():
    for segment in snake:
        pygame.draw.rect(screen, GREEN, (segment[0], segment[1], CELL_SIZE, CELL_SIZE))

# Draw food
def draw_food():
    pygame.draw.rect(screen, RED, (food[0], food[1], CELL_SIZE, CELL_SIZE))

# Show score
def show_score():
    font = pygame.font.SysFont("Arial", 24)
    score_surface = font.render(f"Score: {score}", True, WHITE)
    screen.blit(score_surface, (10, 10))

# Main game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and direction != "DOWN":
                direction = "UP"
            elif event.key == pygame.K_DOWN and direction != "UP":
                direction = "DOWN"
            elif event.key == pygame.K_LEFT and direction != "RIGHT":
                direction = "LEFT"
            elif event.key == pygame.K_RIGHT and direction != "LEFT":
                direction = "RIGHT"

    # Move snake
    head_x, head_y = snake[0]
    if direction == "UP":
        head_y -= CELL_SIZE
    elif direction == "DOWN":
        head_y += CELL_SIZE
    elif direction == "LEFT":
        head_x -= CELL_SIZE
    elif direction == "RIGHT":
        head_x += CELL_SIZE
    new_head = (head_x, head_y)

    # Check collision with walls or self
    if head_x < 0 or head_x >= WIDTH or head_y < 0 or head_y >= HEIGHT or new_head in snake:
        running = False
        break

    snake.insert(0, new_head)  # add new head

    # Check if snake eats food
    if new_head == food:
        score += 1
        food = generate_food()  # generate new food
        # Snake grows: do NOT remove tail
    else:
        snake.pop()  # remove tail if not eaten

    # Draw everything
    screen.fill(BLACK)
    draw_snake()
    draw_food()
    show_score()
    pygame.display.update()

    # Increase speed as score increases
    speed = BASE_SPEED + score // 3  # speed increases every 3 points
    clock.tick(speed)

# Game over screen
font = pygame.font.SysFont("Arial", 48)
game_over_surface = font.render("GAME OVER", True, RED)
screen.blit(game_over_surface, (WIDTH // 2 - 140, HEIGHT // 2 - 30))
pygame.display.update()
pygame.time.delay(2000)

pygame.quit()
