import pygame
import random

# Initialize Pygame
pygame.init()

# Screen dimensions
WIDTH, HEIGHT = 600, 400
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Space Shooter")

# Colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (200, 0, 0)
BLUE = (0, 0, 200)

# Clock
clock = pygame.time.Clock()
FPS = 60

# Player
player_width, player_height = 50, 30
player_x = WIDTH // 2 - player_width // 2
player_y = HEIGHT - player_height - 10
player_speed = 5

# Bullet
bullet_width, bullet_height = 5, 10
bullets = []
bullet_speed = 7

# Enemies
enemy_width, enemy_height = 40, 30
enemies = []
enemy_speed = 2
enemy_spawn_delay = 40  # frames
enemy_timer = 0

# Score
score = 0
font = pygame.font.SysFont("Arial", 24)

# Draw player
def draw_player(x, y):
    pygame.draw.rect(screen, BLUE, (x, y, player_width, player_height))

# Draw bullet
def draw_bullets():
    for bullet in bullets:
        pygame.draw.rect(screen, WHITE, bullet)

# Draw enemies
def draw_enemies():
    for enemy in enemies:
        pygame.draw.rect(screen, RED, enemy)

# Show score
def show_score():
    score_surface = font.render(f"Score: {score}", True, WHITE)
    screen.blit(score_surface, (10, 10))

# Main game loop
running = True
while running:
    screen.fill(BLACK)
    
    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Key presses
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and player_x > 0:
        player_x -= player_speed
    if keys[pygame.K_RIGHT] and player_x < WIDTH - player_width:
        player_x += player_speed
    if keys[pygame.K_SPACE]:
        if len(bullets) < 5:  # limit bullets on screen
            bullets.append(pygame.Rect(player_x + player_width//2 - bullet_width//2, player_y, bullet_width, bullet_height))

    # Update bullets
    for bullet in bullets[:]:
        bullet.y -= bullet_speed
        if bullet.y < 0:
            bullets.remove(bullet)

    # Spawn enemies
    enemy_timer += 1
    if enemy_timer >= enemy_spawn_delay:
        enemy_x = random.randint(0, WIDTH - enemy_width)
        enemy = pygame.Rect(enemy_x, 0, enemy_width, enemy_height)
        enemies.append(enemy)
        enemy_timer = 0

    # Update enemies
    for enemy in enemies[:]:
        enemy.y += enemy_speed
        # End game if enemy reaches bottom
        if enemy.y + enemy_height >= HEIGHT:
            running = False
        # Keep normal removal if desired (optional)
        # if enemy.y > HEIGHT:
        #     enemies.remove(enemy)

    # Check collisions
    for bullet in bullets[:]:
        for enemy in enemies[:]:
            if bullet.colliderect(enemy):
                bullets.remove(bullet)
                enemies.remove(enemy)
                score += 1
                break

    # Draw everything
    draw_player(player_x, player_y)
    draw_bullets()
    draw_enemies()
    show_score()
    pygame.display.update()

    clock.tick(FPS)

# Game over screen
game_over_font = pygame.font.SysFont("Arial", 48)
game_over_surface = game_over_font.render("GAME OVER", True, RED)
screen.blit(game_over_surface, (WIDTH // 2 - 140, HEIGHT // 2 - 30))
pygame.display.update()
pygame.time.delay(2000)

pygame.quit()
